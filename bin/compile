#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# debug
# set -x

# clean up leaking environment
unset GIT_DIR

# config
HOST="static.incaseofstairs.com"

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2

function mktmpdir() {
  dir=$(mktemp -t node-$1-XXXX)
  rm -rf $dir
  mkdir -p $dir
  echo $dir
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

function run_lumbar() {
  # TODO : How do we want to handle dirtory output and other config options
  cd $BUILD_DIR
  lumbar build --minimize lumbar.json 2>&1 | indent
  if [ "${PIPESTATUS[*]}" != "0 0" ]; then
    echo " !     Failed to execute lumbar"
    exit 1
  fi
}

function package_download() {
  engine="$1"
  version="$2"
  location="$3"

  mkdir -p $location
  package="http://${HOST}/$engine-$version.tgz"
  curl $package -s -o - | tar xzf - -C $location
}

LUMBAR_VERSION=1.0.19
echo "Using Lumbar version: ${LUMBAR_VERSION}" | indent

# vendor directories
VENDORED_LUMBAR="$(mktmpdir lumbar)"

# download and unpack packages
echo "-----> Fetching Lumbar"
package_download "lumbar" "${LUMBAR_VERSION}" "${VENDORED_LUMBAR}"

# setting up paths for building
PATH="$VENDORED_LUMBAR/lib/node_modules/lumbar/bin:$VENDORED_LUMBAR/bin:$PATH"

echo "-----> Building lumbar content"
run_lumbar
